View.java:
```java
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class View extends JFrame implements ActionListener {
    private JButton startStopBtn, avsluttBtn;
    private JPanel knappPanel, cellePanel;
    private JLabel generasjonsLabel;
    private Verden verden;
    private boolean kjorer = false;

    public View(Verden verden) {
        super("Game of Life");
        this.verden = verden;
        opprettGUI();
    }

    private void opprettGUI() {
        setSize(800, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Knapp panel
        knappPanel = new JPanel();
        startStopBtn = new JButton("Start");
        startStopBtn.addActionListener(this);
        avsluttBtn = new JButton("Avslutt");
        avsluttBtn.addActionListener(this);
        knappPanel.add(startStopBtn);
        knappPanel.add(avsluttBtn);
        add(knappPanel, BorderLayout.NORTH);

        // Celle panel
        cellePanel = new JPanel();
        cellePanel.setLayout(new GridLayout(verden.antRader, verden.antKolonner));
        for (int i = 0; i < verden.antRader; i++) {
            for (int j = 0; j < verden.antKolonner; j++) {
                JButton celleBtn = new JButton();
                celleBtn.setPreferredSize(new Dimension(10, 10));
                Celle celle = verden.rutenett.hentCelle(i, j);
                if (celle.erLevende()) {
                    celleBtn.setBackground(Color.BLACK);
                } else {
                    celleBtn.setBackground(Color.WHITE);
                }
                celleBtn.addActionListener(new CelleListener(celleBtn, celle));
                cellePanel.add(celleBtn);
            }
        }
        add(cellePanel, BorderLayout.CENTER);

        // Generasjons label
        generasjonsLabel = new JLabel("Generasjon nr. " + verden.genNr);
        add(generasjonsLabel, BorderLayout.SOUTH);

        setVisible(true);
    }

    private void oppdaterCellePanel() {
        for (int i = 0; i < verden.antRader; i++) {
            for (int j = 0; j < verden.antKolonner; j++) {
                JButton celleBtn = (JButton) cellePanel.getComponent(i * verden.antKolonner + j);
                Celle celle = verden.rutenett.hentCelle(i, j);
                if (celle.erLevende()) {
                    celleBtn.setBackground(Color.BLACK);
                } else {
                    celleBtn.setBackground(Color.WHITE);
                }
            }
        }
    }

    private void oppdaterGenerasjonsLabel() {
        generasjonsLabel.setText("Generasjon nr. " + verden.genNr);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == startStopBtn) {
            if (!kjorer) {
                kjorer = true;
                startStopBtn.setText("Stopp");
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        while (kjorer) {
                            verden.oppdatering();
                            oppdaterCellePanel();
                            oppdaterGenerasjonsLabel();
                            try {
                                Thread.sleep(500);
                            } catch (InterruptedException ex) {
                                ex.printStackTrace();
                            }
                        }
                    }
                }).start();
            } else {
                kjorer = false;
                startStopBtn.setText("Start");
            }
        } else if (e.getSource() == avsluttBtn) {
            System.exit(0);
        }
    }

    private class CelleListener implements ActionListener {
        private JButton button;
        private Celle celle;

        public CelleListener(JButton button, Celle celle) {
            this.button = button;
            this.celle = celle;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            if (!kjorer) {
                if (celle.erLevende()) {
                    celle.settDoed();
                    button.setBackground(Color.WHITE);
                } else {
                    celle.settLevende();
                    button.setBackground(Color.BLACK);
                }
            }
        }
    }
}
```

Controller.java:
```java
public class Controller {
    private View view;
    private Verden verden;

    public Controller() {
        verden = new Verden(20, 20);
        view = new View(verden);
    }
}
```

Hovedprogram.java:
```java
public class Hovedprogram {
    public static void main(String[] args) {
        new Controller();
    }
}
```
